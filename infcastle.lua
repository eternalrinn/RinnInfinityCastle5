local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\205\81","\53\227\127\109\79\165"),function(v42) if (v9(v42,4 -2 )==79) then v30=v8(v11(v42,2 -1 ,1));return "";else local v93=0;local v94;while true do if (v93==0) then v94=v10(v8(v42,45 -29 ));if v30 then local v120=0;local v121;while true do if (v120==0) then v121=v13(v94,v30);v30=nil;v120=1;end if (v120==1) then return v121;end end else return v94;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v95=0;local v96;while true do if (v95==0) then v96=(v43/(2^(v44-(1 -0))))%((1 + 1)^(((v45-1) -(v44-1)) + 1)) ;return v96-(v96%(2 -1)) ;end end else local v97=0;local v98;while true do if (0==v97) then v98=2^(v44-(1 + 0)) ;return (((v43%(v98 + v98))>=v98) and 1) or 0 ;end end end end local function v32() local v46=0;local v47;while true do if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end if (v46==1) then return v47;end end end local function v33() local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + (889 -(261 + 624)) ;v51=1;end end end local function v35() local v56=v34();local v57=v34();local v58=1;local v59=(v31(v57,1,20) * (2^32)) + v56 ;local v60=v31(v57,21,31);local v61=((v31(v57,32)==1) and  -1) or 1 ;if (v60==0) then if (v59==0) then return v61 * 0 ;else local v102=0;while true do if (0==v102) then v60=1;v58=0;break;end end end elseif (v60==2047) then return ((v59==0) and (v61 * ((1 -0)/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==3) then return v14(v65);end if (v63==0) then v64=nil;if  not v62 then v62=v34();if (v62==(619 -(555 + 64))) then return "";end end v63=1;end if (v63==2) then v65={};for v103=932 -(857 + 74) , #v64 do v65[v103]=v10(v9(v11(v64,v103,v103)));end v63=3;end if (v63==1) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66=0;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v66==1) then v71=v34();v72={};for v105=4 -3 ,v71 do local v106=v32();local v107;if (v106==(569 -(367 + 201))) then v107=v32()~=0 ;elseif (v106==(929 -(214 + 713))) then v107=v35();elseif (v106==(1 + 2)) then v107=v36();end v72[v105]=v107;end v70[3]=v32();v66=2;end if (v66==0) then v67={};v68={};v69={};v70={v67,v68,nil,v69};v66=1;end if (v66==2) then for v109=1,v34() do local v110=0;local v111;while true do if (v110==0) then v111=v32();if (v31(v111,1 + 0 ,1 + 0 )==0) then local v122=0;local v123;local v124;local v125;while true do if (0==v122) then v123=v31(v111,2,3);v124=v31(v111,4,6);v122=1;end if (v122==1) then v125={v33(),v33(),nil,nil};if (v123==0) then local v127=0;while true do if (v127==0) then v125[3]=v33();v125[4]=v33();break;end end elseif (v123==1) then v125[3]=v34();elseif (v123==2) then v125[3]=v34() -(2^16) ;elseif (v123==3) then v125[3]=v34() -(2^(1763 -(760 + 987))) ;v125[1641 -(1523 + 114) ]=v33();end v122=2;end if (3==v122) then if (v31(v124,3,3)==1) then v125[4]=v72[v125[4]];end v67[v109]=v125;break;end if (v122==2) then if (v31(v124,1,1)==(1 + 0)) then v125[2]=v72[v125[2]];end if (v31(v124,1915 -(1789 + 124) ,2)==1) then v125[3]=v72[v125[3 -0 ]];end v122=3;end end end break;end end end for v112=1,v34() do v68[v112-1 ]=v39();end return v70;end end end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2];local v78=v73[3];return function(...) local v79=v76;local v80=v77;local v81=v78;local v82=v38;local v83=1;local v84= -(1066 -(68 + 997));local v85={};local v86={...};local v87=v20("#",...) -1 ;local v88={};local v89={};for v99=766 -(745 + 21) ,v87 do if (v99>=v81) then v85[v99-v81 ]=v86[v99 + 1 ];else v89[v99]=v86[v99 + 1 ];end end local v90=(v87-v81) + 1 ;local v91;local v92;while true do local v100=0;while true do if (v100==1) then if (v92<=53) then if (v92<=(9 + 17)) then if (v92<=12) then if (v92<=5) then if (v92<=2) then if (v92<=0) then v89[v91[2]]=v91[3] + v89[v91[17 -13 ]] ;elseif (v92>1) then local v176=0;local v177;local v178;local v179;while true do if (v176==1) then v179=v91[3];for v434=1,v179 do v178[v434]=v89[v177 + v434 ];end break;end if (0==v176) then v177=v91[119 -(32 + 85) ];v178=v89[v177];v176=1;end end else v89[v91[2]]={};end elseif (v92<=3) then if (v89[v91[2 + 0 ]]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[1 + 2 ];end elseif (v92==(961 -(892 + 65))) then local v182=v91[2];v89[v182]=v89[v182](v89[v182 + 1 ]);else v89[v91[1 + 1 ]][v91[3 + 0 ]]=v91[9 -5 ];end elseif (v92<=(35 -27)) then if (v92<=6) then local v138=0;local v139;local v140;local v141;while true do if (2==v138) then for v360=1 -0 ,v91[8 -4 ] do v83=v83 + (351 -(87 + 263)) ;local v361=v79[v83];if (v361[1414 -(447 + 966) ]==(238 -(67 + 113))) then v141[v360-(1818 -(1703 + 114)) ]={v89,v361[3]};else v141[v360-1 ]={v74,v361[3]};end v88[ #v88 + 1 + 0 ]=v141;end v89[v91[2]]=v40(v139,v140,v75);break;end if (v138==1) then v141={};v140=v18({},{[v7("\43\13\252\216\170\255\22","\112\116\82\149\182\206\154\110")]=function(v363,v364) local v365=v141[v364];return v365[1][v365[3 -1 ]];end,[v7("\115\39\206\231\191\69\22\196\231\176","\200\44\120\160\130")]=function(v366,v367,v368) local v369=0;local v370;while true do if (v369==0) then v370=v141[v367];v370[1][v370[2 + 0 ]]=v368;break;end end end});v138=2;end if (v138==0) then v139=v80[v91[3]];v140=nil;v138=1;end end elseif (v92>7) then for v334=v91[2],v91[3] do v89[v334]=nil;end else v89[v91[2]]=v89[v91[3]]%v89[v91[4]] ;end elseif (v92<=10) then if (v92>9) then local v187=0;local v188;local v189;local v190;while true do if (0==v187) then v188=v80[v91[3]];v189=nil;v187=1;end if (v187==1) then v190={};v189=v18({},{[v7("\148\252\66\72\71\79\35","\45\203\163\43\38\35\42\91")]=function(v439,v440) local v441=0;local v442;while true do if (v441==0) then v442=v190[v440];return v442[1][v442[2]];end end end,[v7("\237\186\210\38\144\160\90\214\128\196","\52\178\229\188\67\231\201")]=function(v443,v444,v445) local v446=0;local v447;while true do if (v446==0) then v447=v190[v444];v447[1][v447[2]]=v445;break;end end end});v187=2;end if (v187==2) then for v448=2 -1 ,v91[3 + 1 ] do local v449=0;local v450;while true do if (v449==1) then if (v450[1]==58) then v190[v448-(1 -0) ]={v89,v450[3]};else v190[v448-(2 -1) ]={v74,v450[3]};end v88[ #v88 + 1 ]=v190;break;end if (0==v449) then v83=v83 + 1 ;v450=v79[v83];v449=1;end end end v89[v91[2]]=v40(v188,v189,v75);break;end end else do return v89[v91[2]]();end end elseif (v92>11) then local v191=0;while true do if (v191==0) then v89[v91[2]]=v91[3]~=0 ;v83=v83 + 1 ;break;end end else v89[v91[2]]=v89[v91[3]]%v89[v91[4]] ;end elseif (v92<=19) then if (v92<=15) then if (v92<=13) then local v142=0;local v143;local v144;while true do if (v142==0) then v143=v91[2];v144=v89[v91[3]];v142=1;end if (v142==1) then v89[v143 + 1 ]=v144;v89[v143]=v144[v91[4]];break;end end elseif (v92==14) then local v193=0;local v194;local v195;local v196;local v197;while true do if (v193==0) then v194=v91[1 + 1 ];v195,v196=v82(v89[v194](v21(v89,v194 + 1 ,v84)));v193=1;end if (v193==2) then for v451=v194,v84 do local v452=0;while true do if (v452==0) then v197=v197 + 1 ;v89[v451]=v195[v197];break;end end end break;end if (v193==1) then v84=(v196 + v194) -1 ;v197=0;v193=2;end end else v89[v91[2]]=v89[v91[3]][v91[4]];end elseif (v92<=17) then if (v92==(34 -18)) then v89[v91[2]]=v91[3];else local v202=0;local v203;local v204;while true do if (0==v202) then v203=v91[2];v204=v89[v203];v202=1;end if (v202==1) then for v453=v203 + (15 -(9 + 5)) ,v84 do v15(v204,v89[v453]);end break;end end end elseif (v92==18) then local v205=0;local v206;local v207;while true do if (v205==1) then for v454=v206 + 1 ,v91[4] do v207=v207   .. v89[v454] ;end v89[v91[2]]=v207;break;end if (v205==0) then v206=v91[379 -(85 + 291) ];v207=v89[v206];v205=1;end end else local v208=0;local v209;while true do if (v208==0) then v209=v91[2];v89[v209](v21(v89,v209 + 1 ,v84));break;end end end elseif (v92<=22) then if (v92<=20) then local v145=0;local v146;while true do if (v145==0) then v146=v91[1267 -(243 + 1022) ];v89[v146]=v89[v146](v21(v89,v146 + 1 ,v91[3]));break;end end elseif (v92==21) then local v210=0;local v211;local v212;local v213;local v214;while true do if (v210==1) then v84=(v213 + v211) -1 ;v214=0;v210=2;end if (v210==0) then v211=v91[7 -5 ];v212,v213=v82(v89[v211](v21(v89,v211 + 1 ,v84)));v210=1;end if (v210==2) then for v455=v211,v84 do local v456=0;while true do if (v456==0) then v214=v214 + 1 ;v89[v455]=v212[v214];break;end end end break;end end else local v215=0;local v216;local v217;local v218;while true do if (0==v215) then v216=v91[2];v217=v89[v216];v215=1;end if (1==v215) then v218=v89[v216 + 2 ];if (v218>0) then if (v217>v89[v216 + 1 ]) then v83=v91[3];else v89[v216 + 3 ]=v217;end elseif (v217<v89[v216 + 1 ]) then v83=v91[3];else v89[v216 + 3 ]=v217;end break;end end end elseif (v92<=(95 -71)) then if (v92==23) then v89[v91[2]]=v75[v91[3]];else local v221=v91[1182 -(1123 + 57) ];local v222=v89[v221];for v343=v221 + 1 ,v91[3] do v15(v222,v89[v343]);end end elseif (v92>25) then v89[v91[2]]=v89[v91[3]][v89[v91[4]]];else v89[v91[2]]= #v89[v91[3 + 0 ]];end elseif (v92<=39) then if (v92<=(286 -(163 + 91))) then if (v92<=(1959 -(1869 + 61))) then if (v92<=(979 -(802 + 150))) then v89[v91[2]]=v89[v91[3]];elseif (v92>28) then v89[v91[5 -3 ]][v91[3]]=v91[2 + 2 ];else v89[v91[2]]=v89[v91[3]] + v89[v91[4]] ;end elseif (v92<=30) then local v149=0;local v150;while true do if (v149==0) then v150=v91[2];do return v89[v150](v21(v89,v150 + (3 -2) ,v91[4 -1 ]));end break;end end elseif (v92==31) then local v229=v91[2];v89[v229](v21(v89,v229 + 1 ,v91[3]));elseif (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[5 -2 ];end elseif (v92<=35) then if (v92<=33) then if (v89[v91[2]]==v91[4]) then v83=v83 + 1 + 0 ;else v83=v91[1000 -(915 + 82) ];end elseif (v92==(96 -62)) then local v231=0;local v232;local v233;while true do if (v231==0) then v232=v91[1 + 2 ];v233=v89[v232];v231=1;end if (1==v231) then for v457=v232 + 1 ,v91[4] do v233=v233   .. v89[v457] ;end v89[v91[2]]=v233;break;end end else v89[v91[2]][v89[v91[2 + 1 ]]]=v91[4 -0 ];end elseif (v92<=(1224 -(1069 + 118))) then if (v92==36) then v89[v91[2 -0 ]]=v74[v91[3]];elseif v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==(85 -47)) then v89[v91[2]]();else do return;end end elseif (v92<=46) then if (v92<=42) then if (v92<=40) then v89[v91[2]]=v91[3 + 0 ];elseif (v92==41) then local v238=0;local v239;local v240;while true do if (v238==0) then v239=v91[2];v240={};v238=1;end if (v238==1) then for v458=1, #v88 do local v459=v88[v458];for v471=1474 -(1329 + 145) , #v459 do local v472=0;local v473;local v474;local v475;while true do if (v472==0) then v473=v459[v471];v474=v473[1 -0 ];v472=1;end if (v472==1) then v475=v473[2];if ((v474==v89) and (v475>=v239)) then local v525=0;while true do if (v525==0) then v240[v475]=v474[v475];v473[1]=v240;break;end end end break;end end end end break;end end else local v241=0;local v242;local v243;local v244;while true do if (v241==1) then v244=v89[v242 + 2 ];if (v244>0) then if (v243>v89[v242 + 1 ]) then v83=v91[3];else v89[v242 + 3 ]=v243;end elseif (v243<v89[v242 + 1 ]) then v83=v91[3];else v89[v242 + 3 ]=v243;end break;end if (v241==0) then v242=v91[2];v243=v89[v242];v241=1;end end end elseif (v92<=44) then if (v92==(8 + 35)) then local v245=0;local v246;while true do if (v245==0) then v246=v91[2];v89[v246]=v89[v246]();break;end end else v89[v91[2]]=v75[v91[3]];end elseif (v92>45) then v89[v91[2]]={};else v89[v91[2]]=v89[v91[3]]/v91[4] ;end elseif (v92<=(1899 -(1409 + 441))) then if (v92<=47) then local v153=0;local v154;local v155;local v156;while true do if (2==v153) then if (v155>0) then if (v156<=v89[v154 + 1 ]) then local v476=0;while true do if (v476==0) then v83=v91[3];v89[v154 + 3 ]=v156;break;end end end elseif (v156>=v89[v154 + 1 ]) then v83=v91[3];v89[v154 + 3 ]=v156;end break;end if (v153==0) then v154=v91[2];v155=v89[v154 + 2 ];v153=1;end if (v153==1) then v156=v89[v154] + v155 ;v89[v154]=v156;v153=2;end end elseif (v92>48) then local v251=0;local v252;while true do if (v251==0) then v252=v91[2];do return v89[v252](v21(v89,v252 + 1 ,v91[721 -(15 + 703) ]));end break;end end else local v253=0;local v254;while true do if (v253==0) then v254=v91[1 + 1 ];v89[v254]=v89[v254]();break;end end end elseif (v92<=51) then if (v92>50) then local v255=0;local v256;while true do if (0==v255) then v256=v91[2];v89[v256]=v89[v256](v21(v89,v256 + 1 ,v91[3]));break;end end else v89[v91[2]][v89[v91[441 -(262 + 176) ]]]=v89[v91[6 -2 ]];end elseif (v92>(740 -(198 + 490))) then local v259=0;while true do if (v259==0) then v89[v91[2]]=v91[3]~=(0 + 0) ;v83=v83 + (792 -(368 + 423)) ;break;end end else v89[v91[2]]=v89[v91[3]] -v89[v91[4]] ;end elseif (v92<=80) then if (v92<=66) then if (v92<=59) then if (v92<=56) then if (v92<=54) then v89[v91[2]]=v91[3]~=0 ;elseif (v92==55) then local v261=0;local v262;local v263;while true do if (v261==0) then v262=v91[2];v263={};v261=1;end if (v261==1) then for v460=1, #v88 do local v461=0;local v462;while true do if (v461==0) then v462=v88[v460];for v514=0, #v462 do local v515=0;local v516;local v517;local v518;while true do if (v515==1) then v518=v516[2];if ((v517==v89) and (v518>=v262)) then local v536=0;while true do if (0==v536) then v263[v518]=v517[v518];v516[1]=v263;break;end end end break;end if (v515==0) then v516=v462[v514];v517=v516[1];v515=1;end end end break;end end end break;end end else local v264=0;local v265;while true do if (v264==0) then v265=v91[6 -4 ];do return v21(v89,v265,v84);end break;end end end elseif (v92<=(251 -194)) then local v158=0;local v159;while true do if (v158==0) then v159=v91[2];v89[v159]=v89[v159](v21(v89,v159 + (2 -1) ,v84));break;end end elseif (v92==58) then v89[v91[2]]=v89[v91[3]];else v89[v91[2]]=v89[v91[3]] -v89[v91[4]] ;end elseif (v92<=62) then if (v92<=(1266 -(696 + 510))) then v89[v91[2]]=v74[v91[3]];elseif (v92>61) then do return;end else v89[v91[2]]=v89[v91[21 -(10 + 8) ]][v89[v91[4]]];end elseif (v92<=64) then if (v92>(242 -179)) then v89[v91[1264 -(1091 + 171) ]]=v89[v91[3]]%v91[4] ;else v83=v91[3];end elseif (v92>65) then local v273=0;local v274;while true do if (v273==0) then v274=v91[1 + 1 ];v89[v274](v21(v89,v274 + 1 ,v91[3]));break;end end else v89[v91[2]]=v89[v91[3]]/v91[4] ;end elseif (v92<=(229 -156)) then if (v92<=69) then if (v92<=67) then local v162=0;local v163;local v164;local v165;local v166;while true do if (v162==0) then v163=v91[2];v164,v165=v82(v89[v163](v89[v163 + 1 ]));v162=1;end if (v162==2) then for v373=v163,v84 do local v374=0;while true do if (v374==0) then v166=v166 + 1 ;v89[v373]=v164[v166];break;end end end break;end if (v162==1) then v84=(v165 + v163) -1 ;v166=0;v162=2;end end elseif (v92==68) then v89[v91[2]]=v89[v91[3]] + v89[v91[4]] ;else do return v89[v91[6 -4 ]];end end elseif (v92<=71) then if (v92==70) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[445 -(416 + 26) ];end else local v277=0;local v278;while true do if (v277==0) then v278=v91[2];v89[v278]=v89[v278](v89[v278 + 1 ]);break;end end end elseif (v92==72) then v89[v91[376 -(123 + 251) ]]=v89[v91[3]]%v91[12 -8 ] ;else local v280=0;local v281;local v282;local v283;local v284;while true do if (v280==0) then v281=v91[2];v282,v283=v82(v89[v281](v21(v89,v281 + 1 ,v91[3])));v280=1;end if (v280==2) then for v463=v281,v84 do local v464=0;while true do if (v464==0) then v284=v284 + (4 -3) ;v89[v463]=v282[v284];break;end end end break;end if (v280==1) then v84=(v283 + v281) -1 ;v284=0;v280=2;end end end elseif (v92<=76) then if (v92<=74) then v89[v91[2]]= #v89[v91[3]];elseif (v92>75) then v83=v91[3];else local v286=v91[2];local v287=v89[v286];for v351=v286 + 1 ,v84 do v15(v287,v89[v351]);end end elseif (v92<=78) then if (v92>(775 -(208 + 490))) then v89[v91[2]]=v89[v91[3]] + v91[4] ;else v89[v91[2]]=v89[v91[3]] + v91[4] ;end elseif (v92==79) then for v352=v91[2],v91[3] do v89[v352]=nil;end else local v290=0;local v291;local v292;local v293;while true do if (v290==2) then if (v292>0) then if (v293<=v89[v291 + 1 ]) then local v503=0;while true do if (0==v503) then v83=v91[3];v89[v291 + 1 + 2 ]=v293;break;end end end elseif (v293>=v89[v291 + 1 ]) then local v504=0;while true do if (v504==0) then v83=v91[3];v89[v291 + 2 + 1 ]=v293;break;end end end break;end if (1==v290) then v293=v89[v291] + v292 ;v89[v291]=v293;v290=2;end if (v290==0) then v291=v91[2];v292=v89[v291 + 2 ];v290=1;end end end elseif (v92<=93) then if (v92<=86) then if (v92<=83) then if (v92<=(35 + 46)) then do return v89[v91[2]];end elseif (v92==82) then local v294=0;local v295;while true do if (0==v294) then v295=v91[3 -1 ];v89[v295](v21(v89,v295 + 1 ,v84));break;end end else local v296=0;local v297;while true do if (v296==0) then v297=v91[2];v89[v297](v89[v297 + 1 ]);break;end end end elseif (v92<=(522 -(145 + 293))) then local v168=0;local v169;while true do if (v168==0) then v169=v91[2];v89[v169]=v89[v169](v21(v89,v169 + 1 ,v84));break;end end elseif (v92==(515 -(44 + 386))) then v89[v91[2]][v89[v91[3]]]=v89[v91[1490 -(998 + 488) ]];else v89[v91[2]]=v91[3] + v89[v91[4]] ;end elseif (v92<=89) then if (v92<=87) then v89[v91[2]][v91[3]]=v89[v91[840 -(660 + 176) ]];elseif (v92>88) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else local v301=0;local v302;while true do if (v301==0) then v302=v89[v91[4]];if  not v302 then v83=v83 + 1 ;else local v481=0;while true do if (0==v481) then v89[v91[2]]=v302;v83=v91[3];break;end end end break;end end end elseif (v92<=91) then if (v92==90) then if (v89[v91[2]]==v91[2 + 2 ]) then v83=v83 + 1 + 0 ;else v83=v91[3];end else local v303=0;local v304;while true do if (v303==0) then v304=v89[v91[4]];if  not v304 then v83=v83 + 1 ;else local v482=0;while true do if (v482==0) then v89[v91[774 -(201 + 571) ]]=v304;v83=v91[3];break;end end end break;end end end elseif (v92>92) then if (v89[v91[2]]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else local v305=0;local v306;while true do if (v305==0) then v306=v91[1140 -(116 + 1022) ];do return v21(v89,v306,v84);end break;end end end elseif (v92<=100) then if (v92<=96) then if (v92<=94) then local v172=v91[2];do return v21(v89,v172,v172 + v91[1 + 2 ] );end elseif (v92==95) then local v307=0;local v308;local v309;while true do if (v307==0) then v308=v91[204 -(14 + 188) ];v309=v89[v91[3]];v307=1;end if (v307==1) then v89[v308 + (676 -(534 + 141)) ]=v309;v89[v308]=v309[v91[4]];break;end end else v89[v91[2]]=v91[3]~=(0 -0) ;end elseif (v92<=(58 + 40)) then if (v92==97) then local v311=0;local v312;local v313;local v314;local v315;while true do if (v311==0) then v312=v91[7 -5 ];v313,v314=v82(v89[v312](v21(v89,v312 + 1 ,v91[3])));v311=1;end if (v311==2) then for v465=v312,v84 do local v466=0;while true do if (v466==0) then v315=v315 + (3 -2) ;v89[v465]=v313[v315];break;end end end break;end if (v311==1) then v84=(v314 + v312) -1 ;v315=0 + 0 ;v311=2;end end else v89[v91[2 + 0 ]][v89[v91[3]]]=v91[4];end elseif (v92==99) then v89[v91[2]][v91[3]]=v89[v91[4]];else v89[v91[2]]=v89[v91[3]][v91[4 + 0 ]];end elseif (v92<=103) then if (v92<=101) then local v173=0;local v174;while true do if (v173==0) then v174=v91[2];v89[v174](v89[v174 + 1 ]);break;end end elseif (v92==102) then if (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[6 -3 ];end elseif v89[v91[2 -0 ]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=(294 -189)) then if (v92>104) then do return v89[v91[2]]();end else local v322=0;local v323;local v324;local v325;local v326;while true do if (v322==1) then v84=(v325 + v323) -1 ;v326=0;v322=2;end if (v322==0) then v323=v91[2];v324,v325=v82(v89[v323](v89[v323 + 1 ]));v322=1;end if (v322==2) then for v467=v323,v84 do local v468=0;while true do if (0==v468) then v326=v326 + 1 ;v89[v467]=v324[v326];break;end end end break;end end end elseif (v92==106) then local v327=v91[2];local v328=v89[v327];local v329=v91[862 -(814 + 45) ];for v357=1,v329 do v328[v357]=v89[v327 + v357 ];end else v89[v91[2]]();end v83=v83 + 1 ;break;end if (v100==0) then v91=v79[v83];v92=v91[1];v100=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
