local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\11\15","\223\37\33\178\218\237\200\36"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,1));return "";else local v101=v10(v8(v42,16));if v30 then local v108=0;local v109;while true do if (v108==1) then return v109;end if (v108==0) then v109=v13(v101,v30);v30=nil;v108=1;end end else return v101;end end end);local function v31(v43,v44,v45) if v45 then local v102=(v43/(2^(v44-(2 -1))))%(2^(((v45-1) -(v44-1)) + (2 -1))) ;return v102-(v102%(1 -0)) ;else local v103=0;local v104;while true do if (v103==0) then v104=2^(v44-(2 -1)) ;return (((v43%(v104 + v104))>=v104) and 1) or (0 + 0) ;end end end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (0==v48) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + (623 -(555 + 64)) ;return (v54 * (16778147 -(857 + 74))) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35() local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1,588 -(367 + 201) ) * (2^32)) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,32)==(928 -(214 + 713))) and  -1) or (1 + 0) ;if (v59==(885 -(261 + 624))) then if (v58==0) then return v60 * (0 -0) ;else v59=1 + 0 ;v57=1080 -(1020 + 60) ;end elseif (v59==(2924 -(282 + 595))) then return ((v58==(0 -0)) and (v60 * ((4 -3)/0))) or (v60 * NaN) ;end return v16(v60,v59-(403 + 620) ) * (v57 + (v58/((1639 -(1523 + 114))^(178 -126)))) ;end local function v36(v61) local v62=0;local v63;local v64;while true do if (v62==0) then v63=nil;if  not v61 then v61=v34();if (v61==0) then return "";end end v62=1;end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end if (v62==2) then v64={};for v110=1, #v63 do v64[v110]=v10(v9(v11(v63,v110,v110)));end v62=3;end if (v62==3) then return v14(v64);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=0;local v80;local v81;while true do if (v79==1) then if (v80==(1748 -(760 + 987))) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==(1916 -(1789 + 124))) then v81=v36();end v70[v78]=v81;break;end if (v79==0) then v80=v32();v81=nil;v79=1;end end end v68[3]=v32();for v82=1,v34() do local v83=0;local v84;while true do if (v83==0) then v84=v32();if (v31(v84,1066 -(68 + 997) ,1)==0) then local v117=0;local v118;local v119;local v120;while true do if (2==v117) then if (v31(v119,1,1)==1) then v120[2]=v70[v120[2]];end if (v31(v119,2,2)==1) then v120[12 -9 ]=v70[v120[3]];end v117=3;end if (v117==3) then if (v31(v119,3,120 -(32 + 85) )==1) then v120[4]=v70[v120[4]];end v65[v82]=v120;break;end if (1==v117) then v120={v33(),v33(),nil,nil};if (v118==0) then local v128=0;while true do if (v128==0) then v120[3]=v33();v120[4]=v33();break;end end elseif (v118==1) then v120[3]=v34();elseif (v118==2) then v120[3]=v34() -(2^16) ;elseif (v118==3) then local v321=0;while true do if (v321==0) then v120[3]=v34() -(2^16) ;v120[4]=v33();break;end end end v117=2;end if (v117==0) then v118=v31(v84,2,3);v119=v31(v84,4,6);v117=1;end end end break;end end end for v85=1,v34() do v66[v85-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3 + 0 ];return function(...) local v87=v75;local v88=v76;local v89=v77;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -(1 + 0) ;local v96={};local v97={};for v105=0,v95 do if (v105>=v89) then v93[v105-v89 ]=v94[v105 + 1 ];else v97[v105]=v94[v105 + (958 -(892 + 65)) ];end end local v98=(v95-v89) + 1 ;local v99;local v100;while true do v99=v87[v91];v100=v99[1];if (v100<=52) then if (v100<=(59 -34)) then if (v100<=12) then if (v100<=5) then if (v100<=2) then if (v100<=0) then v97[v99[2]][v99[3]]=v99[4];elseif (v100>1) then local v186=v99[2];local v187,v188=v90(v97[v186](v21(v97,v186 + 1 ,v92)));v92=(v188 + v186) -(2 -1) ;local v189=0;for v322=v186,v92 do v189=v189 + 1 ;v97[v322]=v187[v189];end else v97[v99[2]][v99[11 -8 ]]=v97[v99[4]];end elseif (v100<=3) then v97[v99[2]][v97[v99[3]]]=v99[4];elseif (v100>4) then v97[v99[2]]();else local v192=v99[2];v97[v192](v21(v97,v192 + 1 ,v92));end elseif (v100<=8) then if (v100<=6) then v97[v99[2]]=v74[v99[1 + 2 ]];elseif (v100>(6 + 1)) then v97[v99[2]][v97[v99[1058 -(87 + 968) ]]]=v97[v99[4]];else v97[v99[2]]=v97[v99[5 -2 ]];end elseif (v100<=10) then if (v100>9) then v97[v99[2]]=v99[3];else local v199=0;local v200;local v201;while true do if (0==v199) then v200=v99[3];v201=v97[v200];v199=1;end if (v199==1) then for v421=v200 + 1 ,v99[4] do v201=v201   .. v97[v421] ;end v97[v99[2]]=v201;break;end end end elseif (v100>(48 -37)) then v91=v99[3];else do return;end end elseif (v100<=(17 + 1)) then if (v100<=15) then if (v100<=(23 -10)) then v97[v99[2]]=v97[v99[3]]%v99[4] ;elseif (v100==14) then local v203=0;local v204;local v205;while true do if (0==v203) then v204=v99[2];v205={};v203=1;end if (v203==1) then for v422=1, #v96 do local v423=0;local v424;while true do if (v423==0) then v424=v96[v422];for v475=0, #v424 do local v476=0;local v477;local v478;local v479;while true do if (v476==1) then v479=v477[2];if ((v478==v97) and (v479>=v204)) then v205[v479]=v478[v479];v477[351 -(87 + 263) ]=v205;end break;end if (v476==0) then v477=v424[v475];v478=v477[1];v476=1;end end end break;end end end break;end end else local v206=v99[2];do return v97[v206](v21(v97,v206 + 1 ,v99[6 -3 ]));end end elseif (v100<=16) then local v139=v99[2];local v140=v97[v139];for v178=v139 + 1 ,v92 do v15(v140,v97[v178]);end elseif (v100==17) then v97[v99[2]]=v97[v99[1416 -(447 + 966) ]]%v97[v99[4]] ;else local v208=0;local v209;local v210;local v211;while true do if (1==v208) then v211=v97[v209 + 2 ];if (v211>0) then if (v210>v97[v209 + 1 ]) then v91=v99[8 -5 ];else v97[v209 + 3 ]=v210;end elseif (v210<v97[v209 + 1 ]) then v91=v99[3];else v97[v209 + 3 ]=v210;end break;end if (0==v208) then v209=v99[2];v210=v97[v209];v208=1;end end end elseif (v100<=21) then if (v100<=19) then local v141=0;local v142;local v143;local v144;while true do if (v141==2) then for v352=1 + 0 ,v99[9 -5 ] do local v353=0;local v354;while true do if (v353==0) then v91=v91 + 1 ;v354=v87[v91];v353=1;end if (v353==1) then if (v354[1]==42) then v144[v352-1 ]={v97,v354[3]};else v144[v352-(1 + 0) ]={v73,v354[3]};end v96[ #v96 + 1 ]=v144;break;end end end v97[v99[2]]=v40(v142,v143,v74);break;end if (v141==0) then v142=v88[v99[3]];v143=nil;v141=1;end if (v141==1) then v144={};v143=v18({},{[v7("\138\217\202\87\240\168\174","\214\213\134\163\57\148\205")]=function(v355,v356) local v357=0;local v358;while true do if (v357==0) then v358=v144[v356];return v358[1][v358[2]];end end end,[v7("\151\105\42\115\5\244\59\208\173\78","\180\200\54\68\22\114\157\85")]=function(v359,v360,v361) local v362=0;local v363;while true do if (v362==0) then v363=v144[v360];v363[1][v363[182 -(67 + 113) ]]=v361;break;end end end});v141=2;end end elseif (v100==(79 -59)) then v97[v99[2]]=v97[v99[3]][v97[v99[4]]];else v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;end elseif (v100<=23) then if (v100>22) then if (v99[2]==v97[v99[4]]) then v91=v91 + (953 -(802 + 150)) ;else v91=v99[4 -1 ];end else v97[v99[5 -3 ]]=v74[v99[3]];end elseif (v100==(43 -19)) then local v217=v99[2];v97[v217](v97[v217 + 1 + 0 ]);else local v218=0;local v219;while true do if (0==v218) then v219=v99[2];do return v21(v97,v219,v219 + v99[1000 -(915 + 82) ] );end break;end end end elseif (v100<=38) then if (v100<=(95 -64)) then if (v100<=28) then if (v100<=26) then local v145=v99[2];local v146=v97[v145];local v147=v99[3];for v179=1,v147 do v146[v179]=v97[v145 + v179 ];end elseif (v100==27) then local v220=0;local v221;while true do if (v220==0) then v221=v99[2];v97[v221]=v97[v221](v21(v97,v221 + 1 ,v99[3]));break;end end else local v222=0;local v223;while true do if (0==v222) then v223=v99[2];do return v97[v223](v21(v97,v223 + 1 ,v99[1 + 2 ]));end break;end end end elseif (v100<=29) then local v148=0;local v149;local v150;local v151;local v152;while true do if (v148==0) then v149=v99[4 -2 ];v150,v151=v90(v97[v149](v21(v97,v149 + 1 ,v99[3])));v148=1;end if (v148==1) then v92=(v151 + v149) -(2 -1) ;v152=0;v148=2;end if (v148==2) then for v365=v149,v92 do v152=v152 + 1 ;v97[v365]=v150[v152];end break;end end elseif (v100>30) then local v224=0;local v225;local v226;local v227;while true do if (v224==0) then v225=v99[2];v226=v97[v225 + 2 ];v224=1;end if (v224==1) then v227=v97[v225] + v226 ;v97[v225]=v227;v224=2;end if (2==v224) then if (v226>0) then if (v227<=v97[v225 + 1 ]) then local v463=0;while true do if (v463==0) then v91=v99[3];v97[v225 + 3 ]=v227;break;end end end elseif (v227>=v97[v225 + 1 ]) then local v464=0;while true do if (v464==0) then v91=v99[3];v97[v225 + 2 + 1 ]=v227;break;end end end break;end end elseif (v97[v99[2]]==v97[v99[4]]) then v91=v91 + (15 -(9 + 5)) ;else v91=v99[3];end elseif (v100<=34) then if (v100<=32) then local v153=v99[2];do return v21(v97,v153,v92);end elseif (v100==33) then local v228=v99[2];v97[v228](v21(v97,v228 + 1 ,v92));else v97[v99[2]]=v97[v99[3 -0 ]] -v97[v99[4]] ;end elseif (v100<=36) then if (v100>35) then local v230=0;local v231;local v232;local v233;while true do if (v230==1) then v233=v97[v231 + (1267 -(243 + 1022)) ];if (v233>(1187 -(1069 + 118))) then if (v232>v97[v231 + 1 ]) then v91=v99[3];else v97[v231 + 3 ]=v232;end elseif (v232<v97[v231 + 1 ]) then v91=v99[3];else v97[v231 + 3 ]=v232;end break;end if (v230==0) then v231=v99[378 -(85 + 291) ];v232=v97[v231];v230=1;end end else v97[v99[2]]=v97[v99[3]][v97[v99[4]]];end elseif (v100==(83 -46)) then do return;end else local v236=v99[2];local v237=v97[v236];local v238=v99[3];for v328=1,v238 do v237[v328]=v97[v236 + v328 ];end end elseif (v100<=45) then if (v100<=41) then if (v100<=39) then local v154=0;local v155;local v156;while true do if (v154==0) then v155=v99[2];v156=v97[v155];v154=1;end if (v154==1) then for v369=v155 + 1 ,v92 do v15(v156,v97[v369]);end break;end end elseif (v100>40) then v97[v99[2]]=v97[v99[3]] + v97[v99[4]] ;elseif (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=(93 -50)) then if (v100>42) then local v240=v99[2];local v241,v242=v90(v97[v240](v97[v240 + 1 ]));v92=(v242 + v240) -1 ;local v243=0;for v333=v240,v92 do v243=v243 + 1 ;v97[v333]=v241[v243];end else v97[v99[1 + 1 ]]=v97[v99[3]];end elseif (v100>(77 -33)) then if (v97[v99[7 -5 ]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3 + 0 ];end else v97[v99[2]]=v73[v99[3]];end elseif (v100<=(1228 -(1123 + 57))) then if (v100<=(46 + 0)) then v97[v99[2]]={};elseif (v100==47) then local v248=0;local v249;while true do if (v248==0) then v249=v99[2];v97[v249](v97[v249 + 1 ]);break;end end elseif (v97[v99[2 + 0 ]]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=50) then if (v100==49) then v97[v99[2]]= #v97[v99[794 -(368 + 423) ]];else v97[v99[2]]=v73[v99[9 -6 ]];end elseif (v100==51) then local v253=v99[2];v97[v253]=v97[v253](v21(v97,v253 + 1 ,v92));else local v255=v99[2];local v256=v97[v255 + 2 ];local v257=v97[v255] + v256 ;v97[v255]=v257;if (v256>(18 -(10 + 8))) then if (v257<=v97[v255 + 1 ]) then v91=v99[3];v97[v255 + 3 ]=v257;end elseif (v257>=v97[v255 + 1 ]) then v91=v99[3];v97[v255 + 3 ]=v257;end end elseif (v100<=78) then if (v100<=65) then if (v100<=58) then if (v100<=55) then if (v100<=53) then v97[v99[2]][v99[257 -(163 + 91) ]]=v97[v99[4]];elseif (v100==54) then v97[v99[2]][v97[v99[3]]]=v97[v99[15 -11 ]];elseif v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=56) then for v182=v99[2],v99[1933 -(1869 + 61) ] do v97[v182]=nil;end elseif (v100==(499 -(416 + 26))) then do return v97[v99[2]];end else do return v97[v99[2]]();end end elseif (v100<=61) then if (v100<=59) then local v160=0;local v161;local v162;local v163;local v164;while true do if (v160==1) then v92=(v163 + v161) -1 ;v164=0;v160=2;end if (v160==0) then v161=v99[2];v162,v163=v90(v97[v161](v21(v97,v161 + (3 -2) ,v99[3])));v160=1;end if (v160==2) then for v374=v161,v92 do v164=v164 + 1 ;v97[v374]=v162[v164];end break;end end elseif (v100==(191 -131)) then v97[v99[2]]={};else v97[v99[2]]=v97[v99[3]] -v97[v99[4]] ;end elseif (v100<=63) then if (v100==62) then v97[v99[2]]= #v97[v99[3]];else v97[v99[2]][v99[4 -1 ]]=v99[4];end elseif (v100==(28 + 36)) then v97[v99[3 -1 ]]=v99[441 -(145 + 293) ];else v97[v99[2]]=v97[v99[3]]/v99[4] ;end elseif (v100<=71) then if (v100<=68) then if (v100<=66) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>67) then local v270=0;local v271;while true do if (v270==0) then v271=v99[2];v97[v271](v21(v97,v271 + 1 ,v99[3]));break;end end else v97[v99[2]]=v97[v99[3]] + v97[v99[4]] ;end elseif (v100<=(94 -25)) then v97[v99[432 -(44 + 386) ]]=v97[v99[3 + 0 ]][v99[1490 -(998 + 488) ]];elseif (v100==(1544 -(1329 + 145))) then v97[v99[973 -(140 + 831) ]][v97[v99[3]]]=v99[4];else local v275=0;local v276;local v277;local v278;while true do if (v275==2) then for v429=1,v99[4] do v91=v91 + 1 ;local v430=v87[v91];if (v430[1]==42) then v278[v429-1 ]={v97,v430[3]};else v278[v429-(1851 -(1409 + 441)) ]={v73,v430[3]};end v96[ #v96 + 1 ]=v278;end v97[v99[2]]=v40(v276,v277,v74);break;end if (v275==0) then v276=v88[v99[3]];v277=nil;v275=1;end if (v275==1) then v278={};v277=v18({},{[v7("\151\251\194\29\255\173\220","\155\200\164\171\115")]=function(v432,v433) local v434=0;local v435;while true do if (v434==0) then v435=v278[v433];return v435[1][v435[2]];end end end,[v7("\201\21\141\187\227\10\83\242\47\155","\61\150\74\227\222\148\99")]=function(v436,v437,v438) local v439=0;local v440;while true do if (v439==0) then v440=v278[v437];v440[1][v440[2]]=v438;break;end end end});v275=2;end end end elseif (v100<=74) then if (v100<=(23 + 49)) then v97[v99[2]]();elseif (v100>73) then v97[v99[2]]=v97[v99[3]] + v99[4] ;else v97[v99[2]]=v99[3] + v97[v99[4]] ;end elseif (v100<=76) then if (v100>75) then local v281=0;local v282;while true do if (v281==0) then v282=v99[2];v97[v282]=v97[v282](v97[v282 + 1 ]);break;end end else v97[v99[2]]=v97[v99[3]][v99[4]];end elseif (v100==77) then local v285=0;local v286;local v287;while true do if (v285==1) then v97[v286 + 1 ]=v287;v97[v286]=v287[v99[4]];break;end if (v285==0) then v286=v99[720 -(15 + 703) ];v287=v97[v99[3]];v285=1;end end else local v288=0;local v289;while true do if (v288==0) then v289=v99[2];v97[v289]=v97[v289]();break;end end end elseif (v100<=91) then if (v100<=84) then if (v100<=81) then if (v100<=(37 + 42)) then v97[v99[2]]=v97[v99[3]]%v99[4] ;elseif (v100>80) then local v290=0;local v291;while true do if (v290==0) then v291=v99[2];do return v21(v97,v291,v92);end break;end end else v97[v99[440 -(262 + 176) ]]=v99[3]~=0 ;end elseif (v100<=82) then local v168=0;local v169;while true do if (v168==0) then v169=v99[1723 -(345 + 1376) ];v97[v169]=v97[v169]();break;end end elseif (v100>83) then local v293=v99[2];v97[v293]=v97[v293](v21(v97,v293 + 1 ,v99[3]));else local v295=0;local v296;local v297;while true do if (v295==1) then for v441=v296 + 1 ,v99[3] do v15(v297,v97[v441]);end break;end if (v295==0) then v296=v99[2 + 0 ];v297=v97[v296];v295=1;end end end elseif (v100<=(859 -(201 + 571))) then if (v100<=(1223 -(116 + 1022))) then local v170=v99[690 -(198 + 490) ];local v171,v172=v90(v97[v170](v97[v170 + 1 ]));v92=(v172 + v170) -1 ;local v173=0 -0 ;for v184=v170,v92 do local v185=0;while true do if (0==v185) then v173=v173 + (4 -3) ;v97[v184]=v171[v173];break;end end end elseif (v100==86) then v97[v99[2]]=v99[3]~=0 ;else v97[v99[2]]=v97[v99[3]]/v99[4] ;end elseif (v100<=89) then if (v100>88) then v97[v99[2]]=v97[v99[3]] + v99[3 + 1 ] ;else local v301=0;local v302;while true do if (v301==0) then v302=v99[2];v97[v302](v21(v97,v302 + 1 ,v99[3]));break;end end end elseif (v100==90) then local v303=v99[2];v97[v303]=v97[v303](v97[v303 + 1 ]);else local v305=0;local v306;while true do if (v305==0) then v306=v99[2];v97[v306]=v97[v306](v21(v97,v306 + 1 ,v92));break;end end end elseif (v100<=98) then if (v100<=94) then if (v100<=92) then local v174=0;local v175;local v176;while true do if (1==v174) then v97[v175 + (1 -0) ]=v176;v97[v175]=v176[v99[4]];break;end if (v174==0) then v175=v99[2];v176=v97[v99[1209 -(696 + 510) ]];v174=1;end end elseif (v100==93) then do return v97[v99[2]]();end else v97[v99[2]]=v99[3] + v97[v99[4]] ;end elseif (v100<=96) then if (v100==95) then if (v99[2]==v97[v99[1266 -(1091 + 171) ]]) then v91=v91 + 1 ;else v91=v99[3];end else local v308=v99[2];local v309,v310=v90(v97[v308](v21(v97,v308 + 1 ,v92)));v92=(v310 + v308) -1 ;local v311=0 + 0 ;for v344=v308,v92 do local v345=0;while true do if (v345==0) then v311=v311 + 1 ;v97[v344]=v309[v311];break;end end end end elseif (v100==(305 -208)) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else v91=v99[3];end elseif (v100<=101) then if (v100<=99) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==100) then local v314=v99[2];local v315={};for v346=1, #v96 do local v347=0;local v348;while true do if (0==v347) then v348=v96[v346];for v450=0, #v348 do local v451=v348[v450];local v452=v451[1];local v453=v451[7 -5 ];if ((v452==v97) and (v453>=v314)) then v315[v453]=v452[v453];v451[1]=v315;end end break;end end end else local v316=v99[3];local v317=v97[v316];for v349=v316 + 1 ,v99[14 -10 ] do v317=v317   .. v97[v349] ;end v97[v99[2]]=v317;end elseif (v100<=103) then if (v100>102) then do return v97[v99[2]];end else local v319=0;while true do if (v319==0) then v97[v99[2]]=v99[3]~=0 ;v91=v91 + 1 ;break;end end end elseif (v100==104) then for v350=v99[2],v99[377 -(123 + 251) ] do v97[v350]=nil;end else local v320=0;while true do if (0==v320) then v97[v99[2]]=v99[862 -(814 + 45) ]~=(0 -0) ;v91=v91 + 1 ;break;end end end v91=v91 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
