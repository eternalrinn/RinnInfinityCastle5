local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\25\149","\124\55\187\177\78"),function(v42) if (v9(v42,2)==79) then local v101=0;while true do if (v101==0) then v30=v8(v11(v42,1,2 -1 ));return "";end end else local v102=0;local v103;while true do if (v102==0) then v103=v10(v8(v42,16));if v30 then local v122=0;local v123;while true do if (v122==1) then return v123;end if (v122==0) then v123=v13(v103,v30);v30=nil;v122=1;end end else return v103;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v104=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v104-(v104%1) ;else local v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end local function v32() local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48=0;local v49;local v50;while true do if (0==v48) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end if (v48==1) then return (v50 * 256) + v49 ;end end end local function v34() local v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end local function v35() local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1,20) * (2^32)) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,32)==1) and  -1) or 1 ;if (v59==0) then if (v58==0) then return v60 * (0 -0) ;else local v108=0;while true do if (0==v108) then v59=1;v57=0;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * ((2 -1)/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end local function v36(v61) local v62=0;local v63;local v64;while true do if (3==v62) then return v14(v64);end if (v62==1) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end if (v62==2) then v64={};for v109=1, #v63 do v64[v109]=v10(v9(v11(v63,v109,v109)));end v62=3;end if (v62==0) then v63=nil;if  not v61 then local v115=0;while true do if (v115==0) then v61=v34();if (v61==0) then return "";end break;end end end v62=1;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=v32();local v80;if (v79==1) then v80=v32()~=0 ;elseif (v79==2) then v80=v35();elseif (v79==3) then v80=v36();end v70[v78]=v80;end v68[3]=v32();for v82=1,v34() do local v83=0;local v84;while true do if (v83==0) then v84=v32();if (v31(v84,1,1)==0) then local v118=0;local v119;local v120;local v121;while true do if (v118==3) then if (v31(v120,3,934 -(857 + 74) )==1) then v121[4]=v70[v121[4]];end v65[v82]=v121;break;end if (1==v118) then v121={v33(),v33(),nil,nil};if (v119==0) then local v127=0;while true do if (v127==0) then v121[3]=v33();v121[4]=v33();break;end end elseif (v119==1) then v121[3]=v34();elseif (v119==2) then v121[3]=v34() -(2^16) ;elseif (v119==3) then v121[3]=v34() -(2^16) ;v121[4]=v33();end v118=2;end if (v118==2) then if (v31(v120,1,1)==1) then v121[2]=v70[v121[2]];end if (v31(v120,621 -(555 + 64) ,2)==1) then v121[3]=v70[v121[3]];end v118=3;end if (0==v118) then v119=v31(v84,2,3);v120=v31(v84,4,6);v118=1;end end end break;end end end for v85=1,v34() do v66[v85-1 ]=v39();end return v68;end local function v40(v72,v73,v74) local v75=v72[569 -(367 + 201) ];local v76=v72[2];local v77=v72[3];return function(...) local v87=v75;local v88=v76;local v89=v77;local v90=v38;local v91=1;local v92= -1;local v93={};local v94={...};local v95=v20("#",...) -1 ;local v96={};local v97={};for v106=927 -(214 + 713) ,v95 do if (v106>=v89) then v93[v106-v89 ]=v94[v106 + 1 ];else v97[v106]=v94[v106 + 1 + 0 ];end end local v98=(v95-v89) + 1 + 0 ;local v99;local v100;while true do local v107=0;while true do if (v107==0) then v99=v87[v91];v100=v99[1];v107=1;end if (v107==1) then if (v100<=53) then if (v100<=26) then if (v100<=12) then if (v100<=5) then if (v100<=(879 -(282 + 595))) then if (v100<=0) then local v138=v99[2];local v139=v97[v138];local v140=v97[v138 + 2 ];if (v140>0) then if (v139>v97[v138 + 1 ]) then v91=v99[3];else v97[v138 + 3 ]=v139;end elseif (v139<v97[v138 + 1 ]) then v91=v99[3];else v97[v138 + 3 ]=v139;end elseif (v100>1) then v97[v99[1639 -(1523 + 114) ]]=v97[v99[3]]/v99[4] ;else v97[v99[2]]=v97[v99[3]]%v99[4] ;end elseif (v100<=3) then v97[v99[2]]={};elseif (v100==4) then v97[v99[2]]=v97[v99[3]][v97[v99[4]]];else local v173=v99[2];local v174,v175=v90(v97[v173](v97[v173 + 1 ]));v92=(v175 + v173) -(1 + 0) ;local v176=0 -0 ;for v334=v173,v92 do local v335=0;while true do if (0==v335) then v176=v176 + 1 ;v97[v334]=v174[v176];break;end end end end elseif (v100<=8) then if (v100<=6) then v97[v99[2]]= #v97[v99[3]];elseif (v100==(1072 -(68 + 997))) then v97[v99[1272 -(226 + 1044) ]]=v97[v99[3]]%v97[v99[4]] ;else local v178=0;local v179;while true do if (v178==0) then v179=v99[8 -6 ];v97[v179]=v97[v179](v21(v97,v179 + 1 ,v92));break;end end end elseif (v100<=10) then if (v100>9) then v97[v99[2]][v99[3]]=v97[v99[4]];else v97[v99[2]]=v73[v99[3]];end elseif (v100==11) then if  not v97[v99[119 -(32 + 85) ]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v99[3 + 0 ] + v97[v99[4]] ;end elseif (v100<=19) then if (v100<=15) then if (v100<=13) then do return v97[v99[2]]();end elseif (v100>14) then if (v99[1 + 1 ]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end else local v185=0;local v186;local v187;local v188;local v189;while true do if (v185==1) then v92=(v188 + v186) -1 ;v189=0;v185=2;end if (v185==2) then for v425=v186,v92 do local v426=0;while true do if (0==v426) then v189=v189 + 1 ;v97[v425]=v187[v189];break;end end end break;end if (v185==0) then v186=v99[2];v187,v188=v90(v97[v186](v97[v186 + 1 ]));v185=1;end end end elseif (v100<=17) then if (v100>16) then local v190=0;local v191;local v192;while true do if (1==v190) then for v427=v191 + 1 ,v99[3] do v15(v192,v97[v427]);end break;end if (0==v190) then v191=v99[2];v192=v97[v191];v190=1;end end else local v193=0;local v194;local v195;local v196;while true do if (v193==0) then v194=v99[2];v195=v97[v194];v193=1;end if (v193==1) then v196=v99[3];for v428=1,v196 do v195[v428]=v97[v194 + v428 ];end break;end end end elseif (v100>18) then v97[v99[2]]=v99[960 -(892 + 65) ]~=0 ;v91=v91 + (2 -1) ;else v97[v99[2]]();end elseif (v100<=22) then if (v100<=20) then do return;end elseif (v100==21) then v97[v99[2]]();else local v198=0;local v199;local v200;local v201;local v202;while true do if (v198==2) then for v431=v199,v92 do local v432=0;while true do if (v432==0) then v202=v202 + 1 ;v97[v431]=v200[v202];break;end end end break;end if (0==v198) then v199=v99[2];v200,v201=v90(v97[v199](v21(v97,v199 + 1 ,v99[3])));v198=1;end if (v198==1) then v92=(v201 + v199) -1 ;v202=0 -0 ;v198=2;end end end elseif (v100<=(43 -19)) then if (v100>23) then v97[v99[2]][v97[v99[3]]]=v97[v99[4]];else local v205=v99[2];local v206=v97[v99[3]];v97[v205 + 1 ]=v206;v97[v205]=v206[v99[4]];end elseif (v100==25) then v91=v99[3];elseif (v97[v99[2]]==v97[v99[4]]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100<=39) then if (v100<=32) then if (v100<=29) then if (v100<=27) then local v143=0;local v144;while true do if (0==v143) then v144=v99[2];do return v21(v97,v144,v144 + v99[353 -(87 + 263) ] );end break;end end elseif (v100>28) then local v211=0;local v212;while true do if (v211==0) then v212=v99[182 -(67 + 113) ];v97[v212]=v97[v212]();break;end end else v97[v99[2]]=v97[v99[3]][v99[4]];end elseif (v100<=30) then local v145=0;local v146;while true do if (v145==0) then v146=v99[2];v97[v146]=v97[v146](v97[v146 + 1 ]);break;end end elseif (v100>31) then v97[v99[2]]={};else v97[v99[2]][v99[3]]=v99[4];end elseif (v100<=35) then if (v100<=33) then v97[v99[2]]=v97[v99[3]] -v97[v99[4]] ;elseif (v100>(25 + 9)) then local v218=0;local v219;local v220;local v221;while true do if (v218==1) then v221=v99[7 -4 ];for v433=1,v221 do v220[v433]=v97[v219 + v433 ];end break;end if (v218==0) then v219=v99[2];v220=v97[v219];v218=1;end end else local v222=v99[2];do return v97[v222](v21(v97,v222 + 1 ,v99[3]));end end elseif (v100<=(28 + 9)) then if (v100>36) then v97[v99[2]][v97[v99[11 -8 ]]]=v99[4];elseif (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[3];end elseif (v100>38) then local v225=0;local v226;local v227;local v228;while true do if (v225==2) then for v436=2 -1 ,v99[4] do v91=v91 + (1 -0) ;local v437=v87[v91];if (v437[1]==96) then v228[v436-1 ]={v97,v437[3]};else v228[v436-1 ]={v73,v437[3]};end v96[ #v96 + 1 ]=v228;end v97[v99[2]]=v40(v226,v227,v74);break;end if (0==v225) then v226=v88[v99[3]];v227=nil;v225=1;end if (v225==1) then v228={};v227=v18({},{[v7("\242\191\36\33\201\133\53","\79\173\224\77")]=function(v439,v440) local v441=0;local v442;while true do if (v441==0) then v442=v228[v440];return v442[953 -(802 + 150) ][v442[2]];end end end,[v7("\212\121\193\78\57\141\81\239\67\215","\63\139\38\175\43\78\228")]=function(v443,v444,v445) local v446=0;local v447;while true do if (v446==0) then v447=v228[v444];v447[1][v447[2]]=v445;break;end end end});v225=2;end end else for v339=v99[2],v99[3] do v97[v339]=nil;end end elseif (v100<=46) then if (v100<=42) then if (v100<=40) then v97[v99[2]]=v97[v99[3]] + v99[4] ;elseif (v100>41) then v97[v99[2]]=v97[v99[3]];else v97[v99[2 + 0 ]]=v74[v99[3]];end elseif (v100<=44) then if (v100==43) then local v233=0;local v234;while true do if (v233==0) then v234=v99[2];v97[v234]=v97[v234]();break;end end else local v235=0;local v236;local v237;local v238;while true do if (v235==1) then v238=v97[v236] + v237 ;v97[v236]=v238;v235=2;end if (v235==0) then v236=v99[2];v237=v97[v236 + 2 ];v235=1;end if (v235==2) then if (v237>0) then if (v238<=v97[v236 + 1 ]) then local v486=0;while true do if (0==v486) then v91=v99[3];v97[v236 + 3 ]=v238;break;end end end elseif (v238>=v97[v236 + 1 ]) then local v487=0;while true do if (v487==0) then v91=v99[3];v97[v236 + 3 ]=v238;break;end end end break;end end end elseif (v100==45) then v97[v99[2]]=v99[3]~=0 ;else v97[v99[2]]=v99[1000 -(915 + 82) ]~=0 ;end elseif (v100<=49) then if (v100<=47) then local v149=0;local v150;while true do if (v149==0) then v150=v99[2];do return v97[v150](v21(v97,v150 + (2 -1) ,v99[3]));end break;end end elseif (v100>48) then local v241=0;local v242;while true do if (v241==0) then v242=v99[2];v97[v242](v97[v242 + 1 + 0 ]);break;end end else local v243=0;local v244;local v245;while true do if (v243==0) then v244=v99[3];v245=v97[v244];v243=1;end if (v243==1) then for v448=v244 + 1 ,v99[4] do v245=v245   .. v97[v448] ;end v97[v99[2]]=v245;break;end end end elseif (v100<=(66 -15)) then if (v100==50) then local v246=0;local v247;local v248;local v249;while true do if (v246==1) then v249=v97[v247 + 2 ];if (v249>(1187 -(1069 + 118))) then if (v248>v97[v247 + 1 ]) then v91=v99[3];else v97[v247 + 3 ]=v248;end elseif (v248<v97[v247 + 1 ]) then v91=v99[3];else v97[v247 + 3 ]=v248;end break;end if (v246==0) then v247=v99[2];v248=v97[v247];v246=1;end end else local v250=0;while true do if (v250==0) then v97[v99[2]]=v99[3]~=0 ;v91=v91 + 1 ;break;end end end elseif (v100>52) then local v251=0;local v252;local v253;while true do if (v251==1) then for v449=1, #v96 do local v450=0;local v451;while true do if (v450==0) then v451=v96[v449];for v507=0, #v451 do local v508=v451[v507];local v509=v508[1];local v510=v508[2];if ((v509==v97) and (v510>=v252)) then local v522=0;while true do if (0==v522) then v253[v510]=v509[v510];v508[1]=v253;break;end end end end break;end end end break;end if (v251==0) then v252=v99[2];v253={};v251=1;end end else v97[v99[2]]=v97[v99[3]]%v99[4] ;end elseif (v100<=80) then if (v100<=66) then if (v100<=59) then if (v100<=(126 -70)) then if (v100<=(117 -63)) then if (v97[v99[2]]==v99[4]) then v91=v91 + 1 ;else v91=v99[1 + 2 ];end elseif (v100>55) then local v256=0;local v257;while true do if (v256==0) then v257=v99[2];do return v21(v97,v257,v92);end break;end end else do return;end end elseif (v100<=57) then if  not v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end elseif (v100==58) then if v97[v99[3 -1 ]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v97[v99[3]] + v99[4] ;end elseif (v100<=62) then if (v100<=60) then v97[v99[2]]=v99[3];elseif (v100==61) then v97[v99[2]][v97[v99[3]]]=v99[4 + 0 ];else v97[v99[2]]=v97[v99[3]] -v97[v99[4]] ;end elseif (v100<=64) then if (v100==63) then v97[v99[2]][v99[3]]=v97[v99[4]];else for v342=v99[2],v99[3] do v97[v342]=nil;end end elseif (v100==65) then if (v99[793 -(368 + 423) ]==v97[v99[12 -8 ]]) then v91=v91 + (19 -(10 + 8)) ;else v91=v99[3];end else local v265=0;local v266;local v267;while true do if (v265==1) then v97[v266 + 1 ]=v267;v97[v266]=v267[v99[4]];break;end if (v265==0) then v266=v99[2];v267=v97[v99[3]];v265=1;end end end elseif (v100<=73) then if (v100<=69) then if (v100<=67) then local v153=0;local v154;while true do if (v153==0) then v154=v99[2];v97[v154]=v97[v154](v21(v97,v154 + 1 ,v99[3]));break;end end elseif (v100>68) then local v268=0;local v269;local v270;local v271;local v272;while true do if (v268==1) then v92=(v271 + v269) -1 ;v272=0;v268=2;end if (v268==0) then v269=v99[2];v270,v271=v90(v97[v269](v21(v97,v269 + 1 ,v92)));v268=1;end if (2==v268) then for v452=v269,v92 do local v453=0;while true do if (0==v453) then v272=v272 + 1 ;v97[v452]=v270[v272];break;end end end break;end end else v97[v99[2]]= #v97[v99[3]];end elseif (v100<=71) then if (v100==70) then if v97[v99[2]] then v91=v91 + 1 ;else v91=v99[3];end else v97[v99[2]]=v97[v99[3]]/v99[4] ;end elseif (v100==(276 -204)) then v97[v99[444 -(416 + 26) ]]=v99[3] + v97[v99[4]] ;else v97[v99[2]]=v97[v99[3]] + v97[v99[4]] ;end elseif (v100<=76) then if (v100<=74) then local v155=0;local v156;while true do if (v155==0) then v156=v97[v99[4]];if  not v156 then v91=v91 + 1 ;else v97[v99[2]]=v156;v91=v99[3];end break;end end elseif (v100==75) then v97[v99[2]]=v97[v99[3]][v97[v99[4]]];else local v279=0;local v280;while true do if (v279==0) then v280=v99[2];v97[v280](v21(v97,v280 + 1 ,v99[3]));break;end end end elseif (v100<=78) then if (v100>77) then v97[v99[2]]=v73[v99[3]];else local v283=0;local v284;while true do if (0==v283) then v284=v99[6 -4 ];v97[v284](v21(v97,v284 + 1 + 0 ,v92));break;end end end elseif (v100==79) then if (v97[v99[2]]==v97[v99[4]]) then v91=v91 + (1 -0) ;else v91=v99[441 -(145 + 293) ];end else local v285=0;local v286;local v287;local v288;while true do if (1==v285) then v288={};v287=v18({},{[v7("\61\186\199\86\6\128\214","\56\98\229\174")]=function(v454,v455) local v456=0;local v457;while true do if (v456==0) then v457=v288[v455];return v457[1][v457[2]];end end end,[v7("\60\226\55\183\20\212\55\182\6\197","\210\99\189\89")]=function(v458,v459,v460) local v461=0;local v462;while true do if (0==v461) then v462=v288[v459];v462[1][v462[2]]=v460;break;end end end});v285=2;end if (0==v285) then v286=v88[v99[433 -(44 + 386) ]];v287=nil;v285=1;end if (v285==2) then for v463=1,v99[4] do local v464=0;local v465;while true do if (v464==1) then if (v465[1]==96) then v288[v463-1 ]={v97,v465[3]};else v288[v463-1 ]={v73,v465[1489 -(998 + 488) ]};end v96[ #v96 + 1 ]=v288;break;end if (v464==0) then v91=v91 + 1 ;v465=v87[v91];v464=1;end end end v97[v99[1 + 1 ]]=v40(v286,v287,v74);break;end end end elseif (v100<=(77 + 16)) then if (v100<=86) then if (v100<=83) then if (v100<=81) then v91=v99[775 -(201 + 571) ];elseif (v100==82) then do return v97[v99[2]];end else local v289=0;local v290;while true do if (v289==0) then v290=v99[2];v97[v290]=v97[v290](v21(v97,v290 + (1139 -(116 + 1022)) ,v92));break;end end end elseif (v100<=84) then v97[v99[8 -6 ]]=v97[v99[3]] + v97[v99[4]] ;elseif (v100==85) then local v291=v99[2];local v292=v97[v291];for v347=v291 + 1 ,v92 do v15(v292,v97[v347]);end else local v293=0;local v294;while true do if (v293==0) then v294=v99[2];v97[v294](v21(v97,v294 + 1 ,v92));break;end end end elseif (v100<=(53 + 36)) then if (v100<=87) then local v159=0;local v160;while true do if (v159==0) then v160=v99[2];v97[v160](v97[v160 + 1 ]);break;end end elseif (v100>88) then local v295=0;local v296;while true do if (v295==0) then v296=v99[2];do return v21(v97,v296,v92);end break;end end else local v297=0;local v298;local v299;while true do if (0==v297) then v298=v99[2];v299=v97[v298];v297=1;end if (v297==1) then for v466=v298 + 1 ,v92 do v15(v299,v97[v466]);end break;end end end elseif (v100<=91) then if (v100==90) then v97[v99[2]]=v97[v99[3]]%v97[v99[4]] ;else local v301=0;local v302;local v303;local v304;local v305;while true do if (v301==1) then v92=(v304 + v302) -1 ;v305=0;v301=2;end if (v301==0) then v302=v99[2];v303,v304=v90(v97[v302](v21(v97,v302 + 1 ,v99[3])));v301=1;end if (2==v301) then for v467=v302,v92 do local v468=0;while true do if (v468==0) then v305=v305 + 1 ;v97[v467]=v303[v305];break;end end end break;end end end elseif (v100>92) then local v306=0;local v307;while true do if (v306==0) then v307=v99[2];v97[v307]=v97[v307](v97[v307 + 1 ]);break;end end else v97[v99[2]]=v74[v99[3]];end elseif (v100<=(365 -265)) then if (v100<=96) then if (v100<=94) then local v161=v99[2];local v162,v163=v90(v97[v161](v21(v97,v161 + 1 ,v92)));v92=(v163 + v161) -1 ;local v164=0;for v167=v161,v92 do local v168=0;while true do if (v168==0) then v164=v164 + 1 ;v97[v167]=v162[v164];break;end end end elseif (v100==95) then local v310=0;local v311;local v312;while true do if (1==v310) then for v469=v311 + 1 ,v99[4] do v312=v312   .. v97[v469] ;end v97[v99[2]]=v312;break;end if (v310==0) then v311=v99[3];v312=v97[v311];v310=1;end end else v97[v99[2]]=v97[v99[3]];end elseif (v100<=98) then if (v100>97) then v97[v99[2]]=v99[3];else local v317=0;local v318;local v319;while true do if (v317==1) then for v470=3 -2 , #v96 do local v471=0;local v472;while true do if (0==v471) then v472=v96[v470];for v511=859 -(814 + 45) , #v472 do local v512=0;local v513;local v514;local v515;while true do if (v512==0) then v513=v472[v511];v514=v513[2 -1 ];v512=1;end if (1==v512) then v515=v513[1 + 1 ];if ((v514==v97) and (v515>=v318)) then local v529=0;while true do if (0==v529) then v319[v515]=v514[v515];v513[1]=v319;break;end end end break;end end end break;end end end break;end if (v317==0) then v318=v99[2];v319={};v317=1;end end end elseif (v100>99) then v97[v99[2]]=v97[v99[3]][v99[4]];else do return v97[v99[2]]();end end elseif (v100<=103) then if (v100<=101) then v97[v99[2]][v99[3]]=v99[4];elseif (v100==102) then local v322=0;local v323;while true do if (v322==0) then v323=v99[1 + 1 ];v97[v323]=v97[v323](v21(v97,v323 + 1 ,v99[3]));break;end end else do return v97[v99[2]];end end elseif (v100<=105) then if (v100>104) then local v324=0;local v325;while true do if (v324==0) then v325=v97[v99[4]];if  not v325 then v91=v91 + 1 ;else v97[v99[887 -(261 + 624) ]]=v325;v91=v99[3];end break;end end else local v326=0;local v327;while true do if (v326==0) then v327=v99[2];v97[v327](v21(v97,v327 + 1 ,v99[3]));break;end end end elseif (v100==(188 -82)) then local v328=v99[2];local v329=v97[v328 + 2 ];local v330=v97[v328] + v329 ;v97[v328]=v330;if (v329>0) then if (v330<=v97[v328 + 1 ]) then local v473=0;while true do if (v473==0) then v91=v99[3];v97[v328 + 3 ]=v330;break;end end end elseif (v330>=v97[v328 + (1081 -(1020 + 60)) ]) then local v474=0;while true do if (v474==0) then v91=v99[3];v97[v328 + 3 ]=v330;break;end end end else v97[v99[2]][v97[v99[1426 -(630 + 793) ]]]=v97[v99[13 -9 ]];end v91=v91 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
